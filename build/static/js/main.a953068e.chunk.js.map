{"version":3,"sources":["index.js"],"names":["React","require","ReactDOM","process","ELECTRON_IS_DEV","ProductCategoryRow","category","this","props","colSpan","Component","ProductRow","product","name","stocked","style","color","price","ProductTable","filterText","inStockOnly","rows","lastCategory","products","forEach","indexOf","push","SearchBar","type","placeholder","value","onChange","checked","FilterableProductTable","handleOnChange","bind","state","e","target","setState","render","document","getElementById"],"mappings":"+JAAMA,EAAQC,EAAQ,GAChBC,EAAWD,EAAQ,IAEzBE,oIAAYC,gBAAkB,E,IAExBC,E,4JACF,WACI,IAAMC,EAAWC,KAAKC,MAAMF,SAC5B,OACI,6BACI,oBAAIG,QAAQ,IAAZ,SACKH,U,GANYN,EAAMU,WAajCC,E,4JACF,WACI,IAAMC,EAAUL,KAAKC,MAAMI,QACrBC,EAAOD,EAAQE,QACjBF,EAAQC,KACR,sBAAME,MAAO,CAAEC,MAAO,OAAtB,SACKJ,EAAQC,OAGjB,OACI,+BACI,6BAAKA,IACL,6BAAKD,EAAQK,e,GAZJjB,EAAMU,WAkBzBQ,E,4JACF,WACI,IAAMC,EAAaZ,KAAKC,MAAMW,WACxBC,EAAcb,KAAKC,MAAMY,YAEzBC,EAAO,GACTC,EAAe,KAyBnB,OAvBAf,KAAKC,MAAMe,SAASC,SAAQ,SAACZ,IACiB,IAAtCA,EAAQC,KAAKY,QAAQN,KAGrBC,IAAgBR,EAAQE,UAGxBF,EAAQN,WAAagB,GACrBD,EAAKK,KACD,cAACrB,EAAD,CACIC,SAAUM,EAAQN,UACbM,EAAQN,WAGzBe,EAAKK,KACD,cAACf,EAAD,CACIC,QAASA,GACJA,EAAQC,OAGrBS,EAAeV,EAAQN,cAIvB,kCACI,gCACI,+BACI,sCACA,4CAGR,gCAAQe,W,GAvCGrB,EAAMU,WA6C3BiB,E,4JACF,WACI,IAAMR,EAAaZ,KAAKC,MAAMW,WACxBC,EAAcb,KAAKC,MAAMY,YAE/B,OACI,iCACI,uBACIQ,KAAK,OACLC,YAAY,YACZC,MAAOX,EACPY,SAAUxB,KAAKC,MAAMuB,WACzB,8BACI,uBACIH,KAAK,WACLI,QAASZ,EACTW,SAAUxB,KAAKC,MAAMuB,WACxB,IALL,wC,GAZQ/B,EAAMU,WAyBxBuB,E,kDACF,WAAYzB,GAAQ,IAAD,8BACf,cAAMA,IACD0B,eAAiB,EAAKA,eAAeC,KAApB,gBACtB,EAAKC,MAAQ,CACTjB,WAAY,GACZC,aAAa,GALF,E,kDASnB,SAAeiB,GACW,aAAlBA,EAAEC,OAAOV,KACTrB,KAAKgC,SAAS,CAAEnB,YAAaiB,EAAEC,OAAON,UAEtCzB,KAAKgC,SAAS,CAAEpB,WAAYkB,EAAEC,OAAOR,U,oBAG7C,WACI,OACI,gCACI,cAACH,EAAD,CACIR,WAAYZ,KAAK6B,MAAMjB,WACvBC,YAAab,KAAK6B,MAAMhB,YACxBW,SAAUxB,KAAK2B,iBAEnB,cAAChB,EAAD,CACIK,SAAUhB,KAAKC,MAAMe,SACrBJ,WAAYZ,KAAK6B,MAAMjB,WACvBC,YAAab,KAAK6B,MAAMhB,YACxBW,SAAUxB,KAAK2B,wB,GA7BElC,EAAMU,WA6C3CR,EAASsC,OACL,cAACP,EAAD,CAAwBV,SAVX,CACb,CAAEjB,SAAU,iBAAkBW,MAAO,SAAUH,SAAS,EAAMD,KAAM,YACpE,CAAEP,SAAU,iBAAkBW,MAAO,QAASH,SAAS,EAAMD,KAAM,YACnE,CAAEP,SAAU,iBAAkBW,MAAO,SAAUH,SAAS,EAAOD,KAAM,cACrE,CAAEP,SAAU,cAAeW,MAAO,SAAUH,SAAS,EAAMD,KAAM,cACjE,CAAEP,SAAU,cAAeW,MAAO,UAAWH,SAAS,EAAOD,KAAM,YACnE,CAAEP,SAAU,cAAeW,MAAO,UAAWH,SAAS,EAAMD,KAAM,cAKlE4B,SAASC,eAAe,W","file":"static/js/main.a953068e.chunk.js","sourcesContent":["const React = require('react')\nconst ReactDOM = require('react-dom')\n\nprocess.env.ELECTRON_IS_DEV = 0;\n\nclass ProductCategoryRow extends React.Component {\n    render() {\n        const category = this.props.category;\n        return (\n            <tr>\n                <th colSpan=\"2\">\n                    {category}\n                </th>\n            </tr>\n        );\n    }\n}\n\nclass ProductRow extends React.Component {\n    render() {\n        const product = this.props.product;\n        const name = product.stocked ?\n            product.name :\n            <span style={{ color: 'red' }}>\n                {product.name}\n            </span>;\n\n        return (\n            <tr>\n                <td>{name}</td>\n                <td>{product.price}</td>\n            </tr>\n        );\n    }\n}\n\nclass ProductTable extends React.Component {\n    render() {\n        const filterText = this.props.filterText;\n        const inStockOnly = this.props.inStockOnly;\n\n        const rows = [];\n        let lastCategory = null;\n\n        this.props.products.forEach((product) => {\n            if (product.name.indexOf(filterText) === -1) {\n                return;\n            }\n            if (inStockOnly && !product.stocked) {\n                return;\n            }\n            if (product.category !== lastCategory) {\n                rows.push(\n                    <ProductCategoryRow\n                        category={product.category}\n                        key={product.category} />\n                );\n            }\n            rows.push(\n                <ProductRow\n                    product={product}\n                    key={product.name}\n                />\n            );\n            lastCategory = product.category;\n        });\n\n        return (\n            <table>\n                <thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Price</th>\n                    </tr>\n                </thead>\n                <tbody>{rows}</tbody>\n            </table>\n        );\n    }\n}\n\nclass SearchBar extends React.Component {\n    render() {\n        const filterText = this.props.filterText;\n        const inStockOnly = this.props.inStockOnly;\n\n        return (\n            <form>\n                <input\n                    type=\"text\"\n                    placeholder=\"Search...\"\n                    value={filterText}\n                    onChange={this.props.onChange} />\n                <p>\n                    <input\n                        type=\"checkbox\"\n                        checked={inStockOnly}\n                        onChange={this.props.onChange} />\n                    {' '}\n                    Only show products in stock\n                </p>\n            </form>\n        );\n    }\n}\n\nclass FilterableProductTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleOnChange = this.handleOnChange.bind(this);\n        this.state = {\n            filterText: '',\n            inStockOnly: false\n        };\n    }\n\n    handleOnChange(e) {\n        if (e.target.type === \"checkbox\")\n            this.setState({ inStockOnly: e.target.checked })\n        else\n            this.setState({ filterText: e.target.value })\n    }\n\n    render() {\n        return (\n            <div>\n                <SearchBar\n                    filterText={this.state.filterText}\n                    inStockOnly={this.state.inStockOnly}\n                    onChange={this.handleOnChange}\n                />\n                <ProductTable\n                    products={this.props.products}\n                    filterText={this.state.filterText}\n                    inStockOnly={this.state.inStockOnly}\n                    onChange={this.handleOnChange}\n                />\n            </div>\n        );\n    }\n}\n\nconst PRODUCTS = [\n    { category: 'Sporting Goods', price: '$49.99', stocked: true, name: 'Football' },\n    { category: 'Sporting Goods', price: '$9.99', stocked: true, name: 'Baseball' },\n    { category: 'Sporting Goods', price: '$29.99', stocked: false, name: 'Basketball' },\n    { category: 'Electronics', price: '$99.99', stocked: true, name: 'iPod Touch' },\n    { category: 'Electronics', price: '$399.99', stocked: false, name: 'iPhone 5' },\n    { category: 'Electronics', price: '$199.99', stocked: true, name: 'Nexus 7' }\n];\n\nReactDOM.render(\n    <FilterableProductTable products={PRODUCTS} />,\n    document.getElementById('root')\n);"],"sourceRoot":""}